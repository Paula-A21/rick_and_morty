{"ast":null,"code":"import { ADD_FAV, REMOVE_FAV, ORDER, FILTER } from \"./actions\";\nconst initialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n  switch (actions.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: [...state.allCharacters, actions.payload],\n        allCharacters: [...state.allCharacters, actions.payload]\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(char => char.id !== Number(actions.payload))\n      };\n    case FILTER:\n      return {\n        ...state,\n        myFavorites: actions.payload === \"All\" ? [...state.allCharacters] : state.allCharacters.filter(char => char.gender === actions.payload)\n      };\n    case ORDER:\n      const allCharactersCopy = state.allCharacters.sort((a, b) => {\n        return actions.payload === \"A\" ? a.id - b.id : b.id - a.id;\n      });\n      return {\n        ...state,\n        myFavorites: allCharactersCopy\n      };\n\n    // const allCharactersCopy = [...state.allCharacters];\n\n    // return {\n    //     ...state, \n    //     myFavorites: \n    //     [...allCharactersCopy, \n    //         actions.payload === \"A\" ?\n    //         allCharactersCopy.sort((a, b) => a.id - b.id) :\n    //         allCharactersCopy.sort((a, b) => b.id - a.id)\n    //     ]\n    // }\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","ORDER","FILTER","initialState","myFavorites","allCharacters","rootReducer","state","arguments","length","undefined","actions","type","payload","filter","char","id","Number","gender","allCharactersCopy","sort","a","b"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/Henry/rick_and_morty/rick_and_morty/Client/src/redux/reducer.js"],"sourcesContent":["import {ADD_FAV, REMOVE_FAV, ORDER, FILTER} from \"./actions\";\r\n\r\nconst initialState = {\r\n    myFavorites: [],\r\n    allCharacters: []\r\n}\r\n\r\nconst rootReducer = (state = initialState, actions) => {\r\n    switch(actions.type){\r\n        case ADD_FAV:\r\n            return {\r\n                ...state, \r\n                myFavorites: [...state.allCharacters, actions.payload],\r\n                allCharacters: [...state.allCharacters, actions.payload]\r\n            };\r\n        case REMOVE_FAV:\r\n            return {\r\n                ...state, \r\n                myFavorites: state.myFavorites.filter((char) => char.id !== Number(actions.payload))\r\n            };\r\n        case FILTER:\r\n            return {\r\n                ...state, \r\n                myFavorites: \r\n                    actions.payload === \"All\" ?\r\n                    [...state.allCharacters] :\r\n                    state.allCharacters.filter((char) => char.gender === actions.payload)\r\n                \r\n            };\r\n        case ORDER: \r\n\r\n            const allCharactersCopy = state.allCharacters.sort((a, b) => {\r\n                return actions.payload === \"A\" ? a.id - b.id : b.id - a.id;\r\n            });\r\n            return {\r\n                ...state,\r\n                myFavorites: allCharactersCopy,\r\n            };\r\n\r\n            // const allCharactersCopy = [...state.allCharacters];\r\n\r\n            // return {\r\n            //     ...state, \r\n            //     myFavorites: \r\n            //     [...allCharactersCopy, \r\n            //         actions.payload === \"A\" ?\r\n            //         allCharactersCopy.sort((a, b) => a.id - b.id) :\r\n            //         allCharactersCopy.sort((a, b) => b.id - a.id)\r\n            //     ]\r\n            // }\r\n        default:\r\n            return {...state};\r\n    }\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,SAAQA,OAAO,EAAEC,UAAU,EAAEC,KAAK,EAAEC,MAAM,QAAO,WAAW;AAE5D,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAmC;EAAA,IAAlCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,OAAO,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC9C,QAAOC,OAAO,CAACC,IAAI;IACf,KAAKb,OAAO;MACR,OAAO;QACH,GAAGQ,KAAK;QACRH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,aAAa,EAAEM,OAAO,CAACE,OAAO,CAAC;QACtDR,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAa,EAAEM,OAAO,CAACE,OAAO;MAC3D,CAAC;IACL,KAAKb,UAAU;MACX,OAAO;QACH,GAAGO,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKC,MAAM,CAACN,OAAO,CAACE,OAAO,CAAC;MACvF,CAAC;IACL,KAAKX,MAAM;MACP,OAAO;QACH,GAAGK,KAAK;QACRH,WAAW,EACPO,OAAO,CAACE,OAAO,KAAK,KAAK,GACzB,CAAC,GAAGN,KAAK,CAACF,aAAa,CAAC,GACxBE,KAAK,CAACF,aAAa,CAACS,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACG,MAAM,KAAKP,OAAO,CAACE,OAAO;MAE5E,CAAC;IACL,KAAKZ,KAAK;MAEN,MAAMkB,iBAAiB,GAAGZ,KAAK,CAACF,aAAa,CAACe,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACzD,OAAOX,OAAO,CAACE,OAAO,KAAK,GAAG,GAAGQ,CAAC,CAACL,EAAE,GAAGM,CAAC,CAACN,EAAE,GAAGM,CAAC,CAACN,EAAE,GAAGK,CAAC,CAACL,EAAE;MAC9D,CAAC,CAAC;MACF,OAAO;QACH,GAAGT,KAAK;QACRH,WAAW,EAAEe;MACjB,CAAC;;IAED;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACJ;MACI,OAAO;QAAC,GAAGZ;MAAK,CAAC;EACzB;AACJ,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}