{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\OneDrive\\\\Escritorio\\\\Henry\\\\rick_and_morty\\\\rick_and_morty\\\\Client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport axios from \"axios\";\nimport { Route, Routes, useLocation, useNavigate } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Cards from \"./components/Cards/Cards\";\nimport Nav from \"./components/Nav/Nav\";\nimport Detail from './views/Detail/Detail';\nimport About from \"./views/About/About\";\nimport Form from './components/Form/Form';\nimport Favorites from \"./components/Favorites/Favorites\";\nimport RouteError from \"./RouteError/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]); //estos son los characteres que se van a guardar gracias a la API\n  const location = useLocation();\n  const navigate = useNavigate();\n  const EMAIL = 'paula123@gmail.com';\n  const PASSWORD = 'quesito21';\n  const [access, setAccess] = useState(false);\n\n  /*este use effect sirve para que si el email y/o la password que pusimos no es \r\n  correcto, no nos deje desde la url ingresar a otro lugar*/\n\n  /*simula una base de datos dejando acceder solo a la contraseña y \r\n  password que le paso*/\n  function login(userData) {\n    const {\n      email,\n      password\n    } = userData;\n    const URL = 'http://localhost:3001/rickandmorty/login/';\n    axios(URL + `?email=${email}&password=${password}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      const {\n        access\n      } = data;\n      setAccess(access);\n      access && navigate('/home');\n    });\n  }\n  useEffect(() => {\n    !access && navigate('/');\n  }, [access]);\n  const logout = () => {\n    setAccess(false);\n    navigate('/');\n  };\n\n  /*la función on search es la que se ocupa de agregar a los characters \r\n  de la api segun el id que escriba en el input, esto los recibe desde \r\n  el componente SearchBar*/\n  function onSearch(id) {\n    axios(`http://localhost:3001/rickandmorty/character/${id}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      if (data.name) {\n        const char = characters.find(ch => ch.id === Number(id));\n        if (char) return alert(\"Ese personaje ya existe\");\n        setCharacters(oldChars => [...oldChars, data]);\n      } else {\n        window.alert(\"¡No hay personajes con este ID!\");\n      }\n    });\n  }\n\n  /*On close, se ocupa de cerrar la carta que estoy mostrando, esto lo hace \r\n  haciendo un filter del array de characters y guardando en un nuevo array \r\n  todos los characters menos aquel que filtre*/\n  const onClose = id => {\n    const newCharacters = characters.filter(ch => ch.id !== Number(id));\n    setCharacters(newCharacters);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [location.pathname !== \"/\" && /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch,\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Form, {\n          login: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(RouteError, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"vjWmJWOav/wTK4ExioA6oX5YkWU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\n\n// import './App.css';\n// import Card from './components/Card.jsx';\n// import Cards from './components/Cards.jsx';\n// import SearchBar from './components/SearchBar.jsx';\n// import characters, { Rick } from './data.js';\n\n// function App() {\n//    return (\n//       <div className='App'>\n//          <SearchBar onSearch={(characterID) => window.alert(characterID)} />\n//          <Cards characters={characters} />\n//          <Card\n//             id={Rick.id}\n//             name={Rick.name}\n//             status={Rick.status}\n//             species={Rick.species}\n//             gender={Rick.gender}\n//             origin={Rick.origin.name}\n//             image={Rick.image}\n//             onClose={() => window.alert('Emulamos que se cierra la card')}\n//          />\n//       </div>\n//    );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","axios","Route","Routes","useLocation","useNavigate","useState","useEffect","Cards","Nav","Detail","About","Form","Favorites","RouteError","jsxDEV","_jsxDEV","App","_s","characters","setCharacters","location","navigate","EMAIL","PASSWORD","access","setAccess","login","userData","email","password","URL","then","_ref","data","logout","onSearch","id","_ref2","name","char","find","ch","Number","alert","oldChars","window","onClose","newCharacters","filter","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Usuario/OneDrive/Escritorio/Henry/rick_and_morty/rick_and_morty/Client/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React from 'react';\r\nimport axios from \"axios\";\r\nimport {Route, Routes, useLocation, useNavigate} from 'react-router-dom';\r\nimport {useState, useEffect} from 'react';\r\nimport Cards from \"./components/Cards/Cards\";\r\nimport Nav from \"./components/Nav/Nav\";\r\nimport Detail from './views/Detail/Detail';\r\nimport About from \"./views/About/About\"\r\nimport Form from './components/Form/Form';\r\nimport Favorites from \"./components/Favorites/Favorites\";\r\nimport RouteError from \"./RouteError/Error\";\r\n\r\n\r\nfunction App() {\r\n      \r\n   const [characters, setCharacters] = useState([]); //estos son los characteres que se van a guardar gracias a la API\r\n   const location = useLocation();\r\n   const navigate = useNavigate();\r\n   const EMAIL = 'paula123@gmail.com';\r\n   const PASSWORD = 'quesito21';\r\n   const [access, setAccess] = useState(false);\r\n\r\n   /*este use effect sirve para que si el email y/o la password que pusimos no es \r\n   correcto, no nos deje desde la url ingresar a otro lugar*/\r\n   \r\n\r\n   /*simula una base de datos dejando acceder solo a la contraseña y \r\n   password que le paso*/\r\n   function login(userData) {\r\n      const { email, password } = userData;\r\n      const URL = 'http://localhost:3001/rickandmorty/login/';\r\n      axios(URL + `?email=${email}&password=${password}`).then(({ data }) => {\r\n         const { access } = data;\r\n         setAccess(access);\r\n         access && navigate('/home');\r\n      });\r\n   }\r\n\r\n   useEffect(() => {\r\n      !access && navigate('/');\r\n   }, [access]);\r\n\r\n   const logout = () => {\r\n      setAccess(false);\r\n      navigate('/');\r\n   }\r\n  \r\n\r\n   /*la función on search es la que se ocupa de agregar a los characters \r\n   de la api segun el id que escriba en el input, esto los recibe desde \r\n   el componente SearchBar*/\r\n   function onSearch(id) {\r\n      axios(`http://localhost:3001/rickandmorty/character/${id}`).then(\r\n        ({ data }) => {\r\n          if (data.name) {\r\n           const char = characters.find((ch)=> ch.id === Number(id))\r\n           if(char) return alert(\"Ese personaje ya existe\")\r\n            setCharacters((oldChars) => [...oldChars, data]);\r\n         } else {\r\n            window.alert(\"¡No hay personajes con este ID!\");\r\n         }\r\n      }\r\n      );\r\n   }\r\n\r\n   /*On close, se ocupa de cerrar la carta que estoy mostrando, esto lo hace \r\n   haciendo un filter del array de characters y guardando en un nuevo array \r\n   todos los characters menos aquel que filtre*/ \r\n   const onClose = (id) => {\r\n      const newCharacters = characters.filter((ch) => ch.id !== Number(id));\r\n      setCharacters(newCharacters);\r\n   };\r\n   \r\n   return (\r\n      <div className='App'>\r\n         \r\n         {/*quiero que la barra de navegación se muestre en todos lados menos en la\r\n         home page ya que ahí está el form*/}\r\n         {location.pathname !== \"/\" && <Nav onSearch={onSearch} logout={logout} />}\r\n{/* \r\n         {\r\n            location.pathname !== \"/\" || \r\n            location.pathname !== \"/home\" || \r\n            location.pathname !== '/detail/:id' ||\r\n            location.pathname !== '/about' || \r\n            location.pathname !== '/favorites'\r\n            ? \r\n            <RouteError/> :\r\n            \r\n         } */}\r\n\r\n         <Routes>\r\n            <Route path = '/' element = {<Form login={login}/>}/>\r\n            <Route path=\"/home\"  element={<Cards characters={characters} onClose={onClose}/>} /> {/*le paso los characters a Cards por props, junto con la función on close que es la X que aparece en la carta y me permite cerrarla*/}\r\n            <Route path='/detail/:id' element={<Detail/>}/> {/*El detail me sirve para entrar a los detalles de cada carta y ver esa en específico*/}\r\n            <Route path='/about' element={<About/>}/>\r\n            <Route path='/favorites' element={<Favorites/>}/>\r\n            <Route path=\"*\" element={<RouteError/>}></Route>\r\n         </Routes>\r\n         \r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n// import './App.css';\r\n// import Card from './components/Card.jsx';\r\n// import Cards from './components/Cards.jsx';\r\n// import SearchBar from './components/SearchBar.jsx';\r\n// import characters, { Rick } from './data.js';\r\n\r\n// function App() {\r\n//    return (\r\n//       <div className='App'>\r\n//          <SearchBar onSearch={(characterID) => window.alert(characterID)} />\r\n//          <Cards characters={characters} />\r\n//          <Card\r\n//             id={Rick.id}\r\n//             name={Rick.name}\r\n//             status={Rick.status}\r\n//             species={Rick.species}\r\n//             gender={Rick.gender}\r\n//             origin={Rick.origin.name}\r\n//             image={Rick.image}\r\n//             onClose={() => window.alert('Emulamos que se cierra la card')}\r\n//          />\r\n//       </div>\r\n//    );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}